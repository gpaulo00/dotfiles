
# information about the installer
author: Gustavo Paulo <gustavo.paulo.segura@gmail.com>
system: Ubuntu GNU/Linux
packageManager: apt

# common dependencies
dependencies:
  - apt-transport-https
  - ca-certificates
  - curl
  - wget
  - ruby
  - git

packages:
  fancy-shell:
    description: configure the linux terminal
    categories:
      - default
    install:
      - aria2
      - zsh
      - terminator
    configure:
      # install nerd fonts
      - cp -r $(pwd)/fonts $HOME/.local/share
      - fc-cache -vf
      # vcs
      - mv $HOME/.gitconfig{,.bak} || true
      - mv $HOME/.hgrc{,.bak} || true
      - ln -s $(pwd)/vcs/gitconfig $HOME/.gitconfig
      - ln -s $(pwd)/vcs/hgrc $HOME/.hgrc
      # zsh config
      - sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      - git clone "https://github.com/zsh-users/zsh-autosuggestions" "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
      - git clone "https://github.com/bhilburn/powerlevel9k.git" "$ZSH_CUSTOM/themes/powerlevel9k"
      - ln -s $(pwd)/zsh/zshrc $HOME/.zshrc

  editors:
    description: install development editors
    categories:
      - default
    preinstall:
      - curl -fsSL https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -
      - echo "deb https://download.sublimetext.com/ apt/stable/" | tee /etc/apt/sources.list.d/sublime-text.list
    update: true
    install:
      - sublime-text
      - neovim
    configure:
      - curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs \
          https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      - mv $HOME/.config/nvim{,.bak} || true
      - mv $HOME/.oni{,.bak} || true
      - ln -s $(pwd)/neovim $HOME/.config/nvim
      - ln -s $(pwd)/oni $HOME/.oni
      - nvim -c 'PlugInstall' -c 'qa!'

  docker:
    description: install docker
    categories:
      - default
    dependencies:
      - software-properties-common
    preinstall:
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    update: true
    install:
      - docker-ce

  multimedia:
    description: install multimedia tools
    install:
      - gimp
      - rhythmbox
      - vlc
      - inkscape

  elixir:
    description: elixir development
    categories:
      - languages
    preinstall:
      - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
      - dpkg -i erlang-solutions_1.0_all.deb
    update: true
    install:
      - esl-erlang
      - elixir

  java:
    description: install oracle java 8
    categories:
      - languages
    preinstall:
      - apt-get remove --purge openjdk*
      - add-apt-repository -y ppa:webupd8team/java
    update: true
    install:
      - oracle-java8-installer
      - maven

  scala:
    description: scala development
    categories:
      - languages
    preinstall:
      - echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
      - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
      - curl -L -o /usr/local/bin/amm https://git.io/vADLM
      - chmod +x /usr/local/bin/amm
    update: true
    install:
      - sbt

  crystal:
    description: crystal development
    categories:
      - languages
    preinstall:
      - apt-key adv --keyserver pgp.mit.edu --recv-keys 09617FD37CC06B54
      - echo "deb https://dist.crystal-lang.org/apt crystal main" > /etc/apt/sources.list.d/crystal.list
    update: true
    install:
      - crystal
      - libxml2-dev
      - libyaml-dev

  nodejs:
    description: node.js development
    categories:
      - languages
    preinstall:
      - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
      - nvm i node
      - curl -o- -L https://yarnpkg.com/install.sh | bash
    install:
      yarn:
        - "@angular/cli"
        - create-react-app
        - vue-cli
        - typescript
        - tslint
        - eslint
    build:
      git:
        - https://github.com/SuperPaintman/crystal-ctags

  hacking:
    description: some hacking tools
    categories:
      - default
    dependencies:
      - build-essential
      - libpcap-dev
    install:
      apt:
        - nmap
        - aircrack-ng
      gem:
        - bettercap
    build:
      git:
        - https://github.com/aanarchyy/bully

  nat-network:
    description: shared network config
    configure:
      - mv /etc/dnsmasq.conf{,.bak} || true
      - mv /etc/resolv.conf{,.bak} || true
      - ln -s $(pwd)/nat-network/dnsmasq.conf /etc/dnsmasq.conf
      - ln -s $(pwd)/nat-network/resolv.conf /etc/resolv.conf
