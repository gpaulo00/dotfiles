
# information about the installer
author: Gustavo Paulo <gustavo.paulo.segura@gmail.com>
system: Ubuntu GNU/Linux

# update command
updateWith: |
  apt-get update

# common dependencies
dependencies: |
  apt-get install -y apt-transport-https ca-certificates curl wget ruby git

packages:
  fancy-shell:
    description: configure the linux terminal
    categories:
      - default
    install: |
      # install shell tools
      apt-get install -y aria2 zsh terminator

      # install nerd fonts
      cp -r $(pwd)/fonts $HOME/.local/share
      fc-cache -vf

      # vcs
      mv $HOME/.gitconfig{,.bak}
      mv $HOME/.hgrc{,.bak}
      ln -s $(pwd)/vcs/gitconfig $HOME/.gitconfig
      ln -s $(pwd)/vcs/hgrc $HOME/.hgrc

      # zsh config
      sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      git clone "https://github.com/zsh-users/zsh-autosuggestions" "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
      git clone "https://github.com/bhilburn/powerlevel9k.git" "$ZSH_CUSTOM/themes/powerlevel9k"
      ln -s $(pwd)/zsh/zshrc $HOME/.zshrc

  editors:
    description: install development editors
    categories:
      - default
    preinstall: |
      # sublime text
      curl -fsSL https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -
      echo "deb https://download.sublimetext.com/ apt/stable/" | tee /etc/apt/sources.list.d/sublime-text.list

      # vs code
      echo "deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main" | tee /etc/apt/sources.list.d/vscode.list
    install: |
      # install editors
      apt-get install -y sublime-text neovim code

      # install plug
      curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

      # configure nvim
      mv $HOME/.config/nvim{,.bak}
      mv $HOME/.oni{,.bak}
      ln -s $(pwd)/neovim $HOME/.config/nvim
      ln -s $(pwd)/oni $HOME/.oni
      nvim -c 'PlugInstall' -c 'qa!'

  docker:
    description: install docker
    categories:
      - default
    preinstall: |
      # dependencies
      apt-get install -y software-properties-common

      # get docker repos
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    install: |
      apt-get install -y docker-ce

  multimedia:
    description: install multimedia tools
    install: |
      apt-get install -y gimp rhythmbox vlc inkscape

  elixir:
    description: elixir development
    categories:
      - languages
    preinstall: |
      # get erlang
      wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb -O /tmp/erlang-solutions_1.0_all.deb
      dpkg -i /tmp/erlang-solutions_1.0_all.deb
    install: |
      apt-get install -y esl-erlang elixir

  java:
    description: install oracle java 8
    categories:
      - languages
    preinstall: |
      apt-get remove -y --purge openjdk*
      add-apt-repository -y ppa:webupd8team/java
    install: |
      apt-get install -y oracle-java8-installer maven

  scala:
    description: scala development
    depends_on:
      - java
    categories:
      - languages
    preinstall: |
      # sbt repo
      echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    install: |
      # install sbt
      apt-get install -y sbt

      # install ammonite
      curl -L -o /usr/local/bin/amm https://git.io/vADLM
      chmod +x /usr/local/bin/amm

  crystal:
    description: crystal development
    categories:
      - languages
    preinstall: |
      # crystal repo
      apt-key adv --keyserver pgp.mit.edu --recv-keys 09617FD37CC06B54
      echo "deb https://dist.crystal-lang.org/apt crystal main" | tee /etc/apt/sources.list.d/crystal.list
    install: |
      apt-get install -y crystal libxml2-dev libyaml-dev

  golang:
    description: go language development
    categories:
      - languages
    preinstall: |
      add-apt-repository -y ppa:gophers/archive
    install: |
      # install latest golang
      apt-get install -y golang-tip

  nodejs:
    description: node.js development
    categories:
      - languages
    install: |
      # install nvm, node and yarn
      curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
      nvm i node
      curl -o- -L https://yarnpkg.com/install.sh | bash

      # install some packages
      yarn global add @angular/cli create-react-app vue-cli typescript tslint eslint serve now

  hacking:
    description: some hacking tools
    categories:
      - default
    preinstall: |
      apt-get install -y build-essential libpcap-dev
    install: |
      # install tools
      apt-get install -y nmap aircrack-ng
      gem install bettercap

      # install bully
      git clone https://github.com/aanarchyy/bully /opt/bully
      cd /opt/bully
      make && make install

  nat-network:
    description: shared network config
    install: |
      mv /etc/dnsmasq.conf{,.bak}
      mv /etc/resolv.conf{,.bak}
      ln -s $(pwd)/nat-network/dnsmasq.conf /etc/dnsmasq.conf
      ln -s $(pwd)/nat-network/resolv.conf /etc/resolv.conf
